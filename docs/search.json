[
  {
    "objectID": "Quartopage.html",
    "href": "Quartopage.html",
    "title": "County-Level Ecosystem Metrics",
    "section": "",
    "text": "Economic Overview\n \n  \n    \n      \n    \n    Healthy, Wealthy, and Wise Index\n \n   \n    \n      \n    \n    Economic Distress Index\n  \n  \n    \n      \n    \n    County Migration Flows\n  \n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Pandoc is a Haskell library for converting from one markup format to another, and a command-line tool that uses this library.\nPandoc can convert between numerous markup and word processing formats, including, but not limited to, various flavors of Markdown, HTML, LaTeX and Word docx. For the full lists of input and output formats, see the --from and --to options below. Pandoc can also produce PDF output: see creating a PDF, below.\nPandoc’s enhanced version of Markdown includes syntax for tables, definition lists, metadata blocks, footnotes, citations, math, and much more. See below under Pandoc’s Markdown.\nPandoc has a modular design: it consists of a set of readers, which parse text in a given format and produce a native representation of the document (an abstract syntax tree or AST), and a set of writers, which convert this native representation into a target format. Thus, adding an input or output format requires only adding a reader or writer. Users can also run custom pandoc filters to modify the intermediate AST.\nBecause pandoc’s intermediate representation of a document is less expressive than many of the formats it converts between, one should not expect perfect conversions between every format and every other. Pandoc attempts to preserve the structural elements of a document, but not formatting details such as margin size. And some document elements, such as complex tables, may not fit into pandoc’s simple document model. While conversions from pandoc’s Markdown to all formats aspire to be perfect, conversions from formats more expressive than pandoc’s Markdown can be expected to be lossy.\n\n\n\n Back to top"
  },
  {
    "objectID": "different-page/economic_distress.html",
    "href": "different-page/economic_distress.html",
    "title": "Economic Distress Index",
    "section": "",
    "text": "Methodology\nThe index combines seven indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets.\nThe seven components of the index are:\n\nno high school diploma—percent of the population 25 years of age and older without a high school diploma or equivalent;\nhousing vacancy rate—percent of habitable housing that is unoccupied, excluding properties that are for seasonal, recreational, or occasional use;\nunemployment rate—the number of unemployed people as a fraction of the labor force;\npoverty rate—percent of the population living under the poverty line;\nmedian income ratio—median household income as a percent of the state’s median household income;\nchange in employment—percent change in the number of jobs; and\nchange in establishments—percent change in the number of business establishments.\n\nThe counties are ranked on each of the seven indicators. The index is calculated by taking the average of the seven rankings, which are equally weighted, and normalizing the average to be equivalent to a percentile. Distress scores range from approaching zero to 100, such that a county with an average rank of 1,571 out of 3,142 will register a distress score of 50.\nThe County Maps:\nYou can zoom and drag the maps with your mouse just like you would on Google Maps. If you hover your mouse over a county, it will show you the county name and state, along with the following numbers:\n\nDistress Score: These scores range from 0 to 100 and represent a percentile rank for that county. Higher scores are bad. For example, a score of 100 represents the most economically distressed county in the United States (i.e., with respect to the data I used).\nDistress Rank within U.S.: This number shows how a county compares to other counties in the United States. Unlike the distress score, lower numbers are bad, so a rank of 1 means that county is more distressed, on average, than any other county in the United States.\nDistress Rank within State: This only considers counties within the same state. For example, Johnson County has a rank of 105, which means it is the least distressed, on average, of the 105 counties in Kansas.\n\nThe colors on the map are based on the Distress Score.\nA Few Notes on the Data:\nThe calculations present results for two time periods reflecting the composition and availability of the Census Bureau’s ACS 5-Year Estimates: 2013-2017 and 2014-2018. The 5-year estimates are constructed from five years’ worth of data collection, reflecting the length of time required to compile enough data to provide meaningful and accurate estimates at fine geographic scales, such as counties and zip codes. County Business Patterns data are available annually, and I chose to examine the years that match the ends of each ACS 5-year window. For example, the change in employment represents the percent change in the number of jobs from 2017 to 2018.\nIn instances where employment or establishment estimates from the County Business Patterns data were not available for a particular county, I imputed the missing values using the average for the other counties in the same state. This only impacted two counties in the United States.\n\n\nEconomic Distress Scores for U.S. Counties\nClick here to download an interactive copy of the U.S. map.\n\n\n\n                                                \n\n\n\n\nEconomic Distress Scores for Kansas Counties\nClick here to download an interactive copy of the Kansas-specific map.\n\n\n\n                                                \n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "different-page/h1bvisa.html",
    "href": "different-page/h1bvisa.html",
    "title": "H-1B Visas in Kansas",
    "section": "",
    "text": "Definitions\n\nFiscal Year: The fiscal year in which U.S. Citizenship and Immigration Services (USCIS) first recorded an approval or denial in the electronic systems. USCIS follows the U.S. Federal Government fiscal year (FY) calendar, so data sets presented by fiscal year cover Oct. 1 of one year to Sept. 30 of the next year. The applications and petitions USCIS receives on a given date are generally adjudicated on a later date. Therefore, data reflect the date USCIS adjudicated the application or petition, rather than the date received.\nInitial Approval: H-1B petitions with \"new employment\" or \"new concurrent employment\" selected on Part 2, Question 2 of the Form I-129 whose first decision is an approval.\nInitial Denial: H-1B petitions with \"new employment\" or \"new concurrent employment\" selected on Part 2, Question 2 of the Form I-129 whose first decision is a denial.\nContinuing Approval: H-1B petitions with anything other than \"new employment\" or \"new concurrent employment\" selected on Part 2, Question 2 of the Form I-129, whose first decision is an approval. This includes, for example, continuing employment, change of employer, and amended petitions.\nContinuing Denial: H-1B petitions with anything other than \"new employment\" or \"new concurrent employment\" selected on Part 2, Question 2 of the Form I-129 whose first decision is a denial. This includes, for example, continuing employment, change of employer, and amended petitions.\nNAICS: North American Industry Classification System Code, a character string that stands for an industry classification within the North American Industry Classification System.\n\nNote: The data and the above definitions come from the U.S. Citizenship and Immigration Services.\n\n\nTrends in H-1B Approvals in Kansas, FY 2009-2019\nThe metrics in the graph below come from the following calculations:\n\\[\\text{Total Approvals} = \\text{Initial Approvals} + \\text{Continuing Approvals}\\]\n\\[\\text{Total Petitions} = \\text{Initial Approvals} + \\text{Continuing Approvals} + \\text{Initial Denials} + \\text{Continuing Denials}\\]\n\n\n\n                                                \n\n\n\n\nTotal H-1B Approvals in FY 2019, by County\nHover your mouse over a county to reveals the county’s name, the number of initial approvals, and the number of continuing approvals. The coloring on the map is based on the total approvals, which is the sum of intial approvals and continuing approvals.\n\n\n\n                                                \n\n\n\n\nInitial and Continuing H-1B Approvals in Fiscal Year 2019, by Industry (Top 5)\n\n\n\n\n\n                                                \n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "different-page/Unemployment.html",
    "href": "different-page/Unemployment.html",
    "title": "Kansas Unemployment During COVID-19",
    "section": "",
    "text": "Background\nMany businesses are experiencing large decreases in sales and revenue as a result of state and local stay-at-home orders associated with the COVID-19 pandemic, and these businesses are already responding to potential solvency and liquidity problems by laying off workers. Accordingly, many are wondering how high the unemployment rate might be in the second quarter of 2020.\nNot all businesses, sectors, or occupations will experience the negative shock from COVID-19 equally. Many workers, such as those in professional services, may be able to work from home and continue their activities with minimal disruption. Other workers, such as those who work in occupations that involve direct physical contact with customers (e.g., barbers and hairstylists), are likely to see their jobs negatively affected by social-distancing measures and stay-at-home orders.\nIn this post, I use Kansas-specific data on occupation composition to replicate recent analysis by the St. Louis Fed, which attempts to arrive at an estimate of what the unemployment rate may look like at the end of the second quarter of 2020. The St. Louis Fed estimates a 32.1 percent unemployment rate for the second quarter of 2020.\n\nCurrent Labor Statistics\nI start with the state of the Kansas economy as of February 2020. According to the Kansas Department of Labor (via KLIC), the civilian labor force consisted of approxiately 1.5 million people, and the seasonally-adjusted unemployment rate was 3.1%, which means there were around 46,000 unemployed Kansans in February. In the calculations that follow, I assumed the labor force remains constant and that none of the currently unemployed individuals would be able to find a job in the second quarter of 2020.\n\nimport numpy as np\nimport pandas as pd\nimport requests\nimport scipy.stats as ss\nimport matplotlib as mpl\nimport json\nimport plotly.graph_objects as go\nfrom urllib.request import urlopen\nfrom IPython.display import Image\nfrom IPython.display import HTML\n\n\n\nCurrent labor statistics from the Kansas Department of Labor (February 2020):\nCivilian Labor Force = 1,496,507\nUnemployment Rate = 3.1%\n\n\n\n\n\nMethodology\nTo estimate the Kansas unemployment rate for the second quarter of 2020, I follow the analysis by the St. Louis Fed and combine occupation composition data from the Bureau of Labor Statistics with work context data from O*Net Online to compute how many jobs might be exposed to layoff risk due to social distancing measures and stay-at-home orders.\nIn a recent article, Matthew Famiglietti, Fernando Leibovici and Ana Maria Santacreu combine individual-level data from the 2017 American Community Survey with information on occupational contact intensity from O*NET to determine how many people work in occupations that require the worker to perform tasks in close physical proximity to other people. They find that 27.3 million workers have occupations with a high contact intensity. These occupations include barbers, hairstylists, food and beverage serving workers, and flight attendants, among others.\nIn another article, Charles Gascon uses Occupation Employment Statistics from the Bureau of Labor Statistics to determine which occupations face a high risk of unemployment, and he estimates that 46 percent, or approximately 67 million U.S. workers, face a high risk of being laid off.\nI combine the approaches from the two articles and merge state-level occupation composition data from the Bureau of Labor Statics with information on occupational contact intensity from O*NET. I saved some time by extracting the contact intensity information from the Famiglietti, Leibovici, and Santacreu dataset as it is publicly available.\n\n\n\n\n\n\n\n\n\narea\narea_title\narea_type\nnaics\nnaics_title\ni_group\nown_code\nocc_code\nocc_title\no_group\ntot_emp\nemp_prse\njobs_1000\nloc_quotient\npct_total\nh_mean\na_mean\nmean_prse\nh_pct10\nh_pct25\nh_median\nh_pct75\nh_pct90\na_pct10\na_pct25\na_median\na_pct75\na_pct90\nannual\nhourly\n\n\n\n\n10938\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-1011\nChief Executives\ndetailed\n3620\n3.3\n2.598\n1.85\nNaN\n79.21\n164760\n1.5\n18.07\n46.17\n69.85\n#\n#\n37580\n96030\n145280\n#\n#\nNaN\nNaN\n\n\n10939\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-1021\nGeneral and Operations Managers\ndetailed\n18340\n2.1\n13.17\n0.81\nNaN\n47.34\n98480\n1\n20.82\n27.7\n38.33\n58.19\n85.65\n43300\n57610\n79720\n121040\n178140\nNaN\nNaN\n\n\n10940\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-1031\nLegislators\ndetailed\n780\n16.9\n0.563\n1.58\nNaN\n*\n20240\n2.8\n*\n*\n*\n*\n*\n16150\n16930\n18230\n19590\n28430\nTRUE\nNaN\n\n\n10941\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-2011\nAdvertising and Promotions Managers\ndetailed\n90\n19\n0.066\n0.39\nNaN\n56.02\n116510\n8.8\n26.76\n31.97\n48.02\n69.85\n98.29\n55660\n66490\n99880\n145290\n204450\nNaN\nNaN\n\n\n10942\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-2021\nMarketing Managers\ndetailed\n1660\n7.5\n1.194\n0.67\nNaN\n69.93\n145440\n3.3\n32.73\n45.42\n63.9\n87.05\n#\n68090\n94480\n132910\n181060\n#\nNaN\nNaN\n\n\n\n\n\n\n\nThe Kansas Occupation Employment Statistics data contain a column named `occ_code`, which represents the six-digit occupation code; however, the Famiglietti, Leibovici, and Santacreu data contain a four digit occupation code (and no hyphen), so we need to create a similar field in the Kansas dataset that we can use to match the Famiglietti-Leibovici-Santacreu data.\n\n\n\n\n\n\n\n\n\narea\narea_title\narea_type\nnaics\nnaics_title\ni_group\nown_code\nocc_code\nocc_title\no_group\ntot_emp\nemp_prse\njobs_1000\nloc_quotient\npct_total\nh_mean\na_mean\nmean_prse\nh_pct10\nh_pct25\nh_median\nh_pct75\nh_pct90\na_pct10\na_pct25\na_median\na_pct75\na_pct90\nannual\nhourly\nsoc\nprox_index\nscore\nessential\nhome_work\ncategory\n\n\n\n\n0\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-1011\nChief Executives\ndetailed\n3620\n3.3\n2.598\n1.85\nNaN\n79.21\n164760\n1.5\n18.07\n46.17\n69.85\n#\n#\n37580\n96030\n145280\n#\n#\nNaN\nNaN\n11-10\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-1021\nGeneral and Operations Managers\ndetailed\n18340\n2.1\n13.17\n0.81\nNaN\n47.34\n98480\n1\n20.82\n27.7\n38.33\n58.19\n85.65\n43300\n57610\n79720\n121040\n178140\nNaN\nNaN\n11-10\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-1031\nLegislators\ndetailed\n780\n16.9\n0.563\n1.58\nNaN\n*\n20240\n2.8\n*\n*\n*\n*\n*\n16150\n16930\n18230\n19590\n28430\nTRUE\nNaN\n11-10\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-2011\nAdvertising and Promotions Managers\ndetailed\n90\n19\n0.066\n0.39\nNaN\n56.02\n116510\n8.8\n26.76\n31.97\n48.02\n69.85\n98.29\n55660\n66490\n99880\n145290\n204450\nNaN\nNaN\n11-20\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n20\nKansas\n2\n000000\nCross-industry\ncross-industry\n1235\n11-2021\nMarketing Managers\ndetailed\n1660\n7.5\n1.194\n0.67\nNaN\n69.93\n145440\n3.3\n32.73\n45.42\n63.9\n87.05\n#\n68090\n94480\n132910\n181060\n#\nNaN\nNaN\n11-20\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\n\n\nCalculating the Second-Quarter Unemployment Rate\nThe St. Louis Fed analysis averages the numbers from the Famiglietti-Leibovici-Santacreu and Gascon articles to arrive at a point estimate of the number of workers at risk of being laid off during the second quarter. This results in approximately 47 million people being laid off during this period. This is quite high as it assumes everyone in a “high risk” occupation will become laid off. Therefore, I depart from the St. Louis Fed analysis by taking into account the fact that some occupations have been designated as essential and face a lower risk of layoff. Using guidance from the Kansas Essential Functions Framework, I added a field to the Famiglietti, Leibovici, and Santacreu data that indicates whether an occupation is essential.\nTo calculate the expected layoffs, I added the numbers for the occupations in the highest contact intensity category (following Famiglietti, Leibovici, and Santacreu), and I subtracted the numbers from occupations that are essential (my innovation). Adding the expected layoffs to the initial number of unemployed in February results in approximately 66,000 total unemployed Kansans. Given the assumption of a constant labor force, this results in an unemployment rate of 4.4 percent. The calculation can be summarized in the following steps:\n\n\n1. Kansas civilian labor force in February 2020 = 1,496,507 (KDOL)\n2. Kansas unemployment rate in February 2020 = 3.1% (KDOL)\n3. Unemployed Kansans in February 2020 = 46,392 (#1 * #2)\n4. Kansas workers in high contact-intensive occupations = 0 (Nigel's calculations using O*Net data)\n5. Kansas workers employed in \"essential\" occupations = 0 (Nigel's calculations using KEFF guidance)\n6. Estimated layoffs in second quarter 2020 = 0 (#4 - #5)\n7. Unemployed Kansans in second quarter 2020 = 46,392 (#3 + #6)\n8. Kansas unemployment rate in second quarter 2020 = 3.1% (#7 / #1)\n\n\n\n\nSensitivity Analysis\nThe St. Louis Fed estimate of 32.1 percent seems a bit high, but my estimate of 4.4 percent seems very low, especially given the large spike in the number unemployment insurance claims. This is because my estimate assumes everyone in an “essential” occupation will retain his or her job, which is probably not the case. For example, restaurants need cooks and delivery drivers, but they do not need waitstaff right now. Some waiters and waitresses may assist with deliveries, which may keep their hours from getting cut, but dishwashers may end up working fewer hours as they will be washing fewer dishes. We can look at the sensitivity of the estimated unemployment rate to different assumptions in the retention rate of essential occupations. That is, maybe restaurants will only retain 50 percent of their staff instead of 100 percent as the estimate currently assumes.\nThe graph below shows the calculated unemployment rate based on different retention rates for essential occupations. The estimated Kansas unemployment rate for Q2 2002 ranges from 4.4 percent to 22.7 percent, where 22.7 percent assumes no retention of essential occupations (i.e., similar to the St. Louis Fed analysis).\n\n\n\n                                                \n\n\n\n\nSummary of Calculations\nIt is important to note these estimates make several important assumptions:\n\nthe calculations assume the labor force is constant and exclude the fact that some recently unemployed workers may become discouraged and cease looking for employment (i.e., no longer technically unemployed);\nmany businesses may send workers home with pay, rather than laying them off;\nonly occupations with a proximity score of 2 are at risk of being layed off;\nthe sensitivity analysis assumes retention rates are the same accross all occupations; and\nthe calculations do not account for any potential effects of fiscal measures, such as the recent stimulus package or changes in unemployment insurance policy.\n\nIt is also important to keep in mind these are rough calculations. As such, any attempts to place upper and lower bounds on these estimates would follow the same inexact process. The estimates are sensitive to a number of assumptions, but we may be able to relax some of these assumptions with better, more up-to-date data.\nThe expected duration of unemployment matters just as much, if not more, than the unemployment rate itself, especially if the recovery is quicker than we anticipate; however, the uncertainty around when and where it will be safe to resume certain economic activity makes ex ante analysis of the economic impact of COVID-19 very difficult. At best, we can look at what may happen if different scenarios unfold.\n\n\nOther Limitations and Areas for Improvement\nThough I followed guidance from the Kansas Essential Functions Framework, the designation of occupations as essential is somewhat subjective. It might be nice to have others weigh in on which occupations meet the conditions of these guidelines.\nAlso, I started working on adding a field that indicates which positions may be performed from home (we would be able to subtract these from the unemployed as well), but this is also very subjective. I thought O*NET might also have some sort of “telecommute score,” but I haven’t been able to find anything like that just yet.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "different-page/Unemployment_measures.html",
    "href": "different-page/Unemployment_measures.html",
    "title": "Unemployment vs. Underemployment",
    "section": "",
    "text": "Definitions\nThe six measures are based on the following definitions:\n\nU-1, persons unemployed 15 weeks or longer, as a percent of the civilian labor force;\nU-2, job losers and persons who completed temporary jobs, as a percent of the civilian labor force;\nU-3, total unemployed, as a percent of the civilian labor force (this is the definition used for the official unemployment rate);\nU-4, total unemployed plus discouraged workers, as a percent of the civilian labor force plus discouraged workers;\nU-5, total unemployed, plus discouraged workers, plus all other marginally attached workers, as a percent of the civilian labor force plus all marginally attached workers; and\nU-6, total unemployed, plus all marginally attached workers, plus total employed part time for economic reasons, as a percent of the civilian labor force plus all marginally attached workers.\n\n\n\nLabor Underutilization Rates for Kansas, 2003-2019 Annual Averages\nDouble clicking on one of the items in the legend will isolate that series. Double clicking again will bring back the lines for the other measures.\n\n\n\n                                                \n\n\n\n\nLabor Underutilization for States, Third Quarter of 2019 through Second Quarter of 2020 Averages\n\n\n\n                                                \n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "different-page/economic-distress-index.html",
    "href": "different-page/economic-distress-index.html",
    "title": "Economic Distress Index",
    "section": "",
    "text": "The index combines seven indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Figure 1 contains the seven indicators along with their descriptions and sources.\n\n\n\n\n                                                \nFigure 1: Economic Distress Indicators and Descriptions\n\n\n\n\n\n\n\n\n\nThese seven indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\n\n\n\n\n\n\\[\\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\n\n\n\n\n\n\nwhere 𝑋𝑖𝑗 is the value of indicator 𝑖 for county 𝑗.\nIn most cases, higher values represent greater distress; however, for the median income ratio, change in employment, and change in establishments, lower values indicate greater distress. Therefore, normalization requires a slightly different formula:\n\n\n\n\n\n\n\\[\\text{Index Indicator}_{ij} = \\frac{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-X_{ij}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100. \\]\n\n\n\n\n\n\nThe final index value results from taking the geometric mean of the seven indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean."
  },
  {
    "objectID": "different-page/economic-distress-index (1).html",
    "href": "different-page/economic-distress-index (1).html",
    "title": "Economic Distress Index",
    "section": "",
    "text": "The index combines seven indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Table ?@tbl-indicators contains the seven indicators along with their descriptions and sources.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport requests\nimport scipy.stats as ss\nimport matplotlib as mpl\nimport json\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom urllib.request import urlopen\nfrom IPython.display import Image\nfrom IPython.display import HTML\n\nvalues = [\n    [\n        'No High School Diploma', \n        'Housing Vacancy Rate', \n        'Unemployment Rate', \n        'Poverty Rate', \n        'Median Income Ratio', \n        'Change in Employment', \n        'Change in Establishments'\n    ], #1st col\n    [\n        'Percentage of the population 25 years of age and older &lt;b&gt;without a high school diploma or equivalent&lt;/b&gt;',\n        'Percentage of habitable housing that is &lt;b&gt;unoccupied&lt;/b&gt; (excludes properties that are for seasonal, recreational, or occasional use)',\n        'The number of &lt;b&gt;unemployed people&lt;/b&gt; as a fraction of the labor force',\n        'Percentage of the population living &lt;b&gt;under the poverty line&lt;/b&gt;',\n        'Median household income &lt;b&gt;as a percentage&lt;/b&gt; of the state’s median household income',\n        'Percentage change in the &lt;b&gt;number of jobs&lt;/b&gt;',\n        'Percentage change in the number of &lt;b&gt;business establishments&lt;/b&gt;'\n    ],\n    [\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'CBP (2019, 2020)',\n        'CBP (2019, 2020)'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2,3],\n  columnwidth = [25,60,20],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;'],\n        ['&lt;b&gt;Source&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(22,74,88)', 'rgb(231,38,40)', 'rgb(255,193,0)'],\n    align=['center','center','center'],\n    font=dict(color='white', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white', 'white']),\n    align=['left', 'left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\nThese seven indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\).\nIn most cases, higher values represent greater distress; however, for the median income ratio, change in employment, and change in establishments, lower values indicate greater distress. Therefore, normalization requires a slightly different formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-X_{ij}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100.\\]\nThe final index value results from taking the geometric mean of the seven indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean."
  },
  {
    "objectID": "different-page/economic-distress-index (1).html#methodology",
    "href": "different-page/economic-distress-index (1).html#methodology",
    "title": "Economic Distress Index",
    "section": "",
    "text": "The index combines seven indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Table ?@tbl-indicators contains the seven indicators along with their descriptions and sources.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport requests\nimport scipy.stats as ss\nimport matplotlib as mpl\nimport json\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom urllib.request import urlopen\nfrom IPython.display import Image\nfrom IPython.display import HTML\n\nvalues = [\n    [\n        'No High School Diploma', \n        'Housing Vacancy Rate', \n        'Unemployment Rate', \n        'Poverty Rate', \n        'Median Income Ratio', \n        'Change in Employment', \n        'Change in Establishments'\n    ], #1st col\n    [\n        'Percentage of the population 25 years of age and older &lt;b&gt;without a high school diploma or equivalent&lt;/b&gt;',\n        'Percentage of habitable housing that is &lt;b&gt;unoccupied&lt;/b&gt; (excludes properties that are for seasonal, recreational, or occasional use)',\n        'The number of &lt;b&gt;unemployed people&lt;/b&gt; as a fraction of the labor force',\n        'Percentage of the population living &lt;b&gt;under the poverty line&lt;/b&gt;',\n        'Median household income &lt;b&gt;as a percentage&lt;/b&gt; of the state’s median household income',\n        'Percentage change in the &lt;b&gt;number of jobs&lt;/b&gt;',\n        'Percentage change in the number of &lt;b&gt;business establishments&lt;/b&gt;'\n    ],\n    [\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'CBP (2019, 2020)',\n        'CBP (2019, 2020)'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2,3],\n  columnwidth = [25,60,20],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;'],\n        ['&lt;b&gt;Source&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(22,74,88)', 'rgb(231,38,40)', 'rgb(255,193,0)'],\n    align=['center','center','center'],\n    font=dict(color='white', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white', 'white']),\n    align=['left', 'left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\nThese seven indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\).\nIn most cases, higher values represent greater distress; however, for the median income ratio, change in employment, and change in establishments, lower values indicate greater distress. Therefore, normalization requires a slightly different formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-X_{ij}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100.\\]\nThe final index value results from taking the geometric mean of the seven indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean."
  },
  {
    "objectID": "different-page/economic-distress-index (1).html#results",
    "href": "different-page/economic-distress-index (1).html#results",
    "title": "Economic Distress Index",
    "section": "## Results",
    "text": "## Results\n\n\nCode\ntoken = 'pk.eyJ1Ijoid3N1cHBtYyIsImEiOiJjbDA2dWNiZmEyYjRqM2lsc2hrZ2g5Z3ZrIn0.Qcm0AOjbrEP6NPJ6u-14EA'\n\nwith urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:\n    counties = json.load(response)  \n\ndf = pd.read_csv('2020-distress-index-data.csv', dtype={'fips':'str'})\ndf = df.sort_values(by=['index_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(231,38,40,0.25)'), (1.0, 'rgba(231,38,40,0.25)')),\n    ((0.0, 'rgba(231,38,40,0.5)'), (1.0, 'rgba(231,38,40,0.5)')),\n    ((0.0, 'rgba(231,38,40,0.75)'), (1.0, 'rgba(231,38,40,0.75)')),\n    ((0.0, 'rgba(231,38,40,1.0)'), (1.0, 'rgba(231,38,40,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['index_quartile'].unique()):\n    dfp = df[df['index_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['index_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 1: Economic Distress Index for Kansas Counties\n\n\n\n\n\nCode\ndf = df.sort_values(by=['county'])\n\nnames = [\n    '&lt;b&gt;County&lt;/b&gt;', '&lt;b&gt;No HS Diploma&lt;/b&gt;', '&lt;b&gt;Unemp Rate&lt;/b&gt;', \n    '&lt;b&gt;Poverty Rate&lt;/b&gt;', '&lt;b&gt;Median Income&lt;/b&gt;', '&lt;b&gt;Estab Change&lt;/b&gt;', \n    '&lt;b&gt;Emp Change&lt;/b&gt;', '&lt;b&gt;Vacancy Rate&lt;/b&gt;', '&lt;b&gt;Distress Index&lt;/b&gt;', '&lt;b&gt;Index Quartile&lt;/b&gt;'\n]\n\nfig = go.Figure(data=[go.Table(\n    columnwidth = [15]+[10]*9,\n    header=dict(values=names,\n                line_color='darkslategray',\n                fill_color='rgb(131,201,217)',\n                font=dict(color='white', size=12),\n                align='center'),\n    cells=dict(values=[df.county, df.hs_lower.apply('{0:.2f}'.format), df.unemployment_rate.apply('{0:.2f}'.format), \n                       df.poverty_rate.apply('{0:.2f}'.format), df.med_inc_rate.apply('{0:.2f}'.format), \n                       df.est_chg.apply('{0:.2f}'.format), df.emp_chg.apply('{0:.2f}'.format), \n                       df.vacancy_rate.apply('{0:.2f}'.format), df.distress_index.apply('{0:.2f}'.format), \n                       df.index_quartile.str.split(' ').str[0]],\n               line_color='darkslategray',\n               fill_color=['rgba(131,201,217,0.2)','white'],\n               font=dict(color='black', size=12),\n               align=['left', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'center']))\n])\n\nfig.show()\n\n\n\n?(caption)"
  },
  {
    "objectID": "different-page/county-migration-flows.html",
    "href": "different-page/county-migration-flows.html",
    "title": "County Migration Flows",
    "section": "",
    "text": "The following data come from the U.S. Census Bureau’s County-to-County Migration Flows dataset. Figure @fig-results shows net migration for Kansas counties. Table @tbl-results shows inflow, outflow, and net flow by county. Net flow (i.e., migration) is given by the following simple calculation:\n\\[\n\\text{Net Flow}_i = \\text{Inflow}_i - \\text{Outflow}_i,\n\\]\nwhere \\(\\text{Net Flow}_i &lt; 0\\) indicates the number of indiviuals leaving county 𝑖 exceeded the number of individuals entering county 𝑖 during the sampling period."
  },
  {
    "objectID": "different-page/county-migration-flows.html#methodology",
    "href": "different-page/county-migration-flows.html#methodology",
    "title": "County Migration Flows",
    "section": "Methodology",
    "text": "Methodology\nThe following data come from the U.S. Census Bureau’s County-to-County Migration Flows dataset. Figure @fig-results shows net migration for Kansas counties. Figure 1 shows inflow, outflow, and net flow by county. Net flow (i.e., migration) is given by the following simple calculation:\n\\[\n\\text{Net Flow}_i = \\text{Inflow}_i - \\text{Outflow}_i,\n\\]\nwhere \\(\\text{Net Flow}_i &lt; 0\\) indicates the number of indiviuals leaving county 𝑖 exceeded the number of individuals entering county 𝑖 during the sampling period."
  },
  {
    "objectID": "different-page/county-migration-flows.html#results",
    "href": "different-page/county-migration-flows.html#results",
    "title": "County Migration Flows",
    "section": "Results",
    "text": "Results\n**Note:** The borders of the counties in the South Kansas Coaltion are highlighted in the map below.\n\n\n\n\n                                                \nFigure 1: Net Migration Flows for Kansas Counties"
  },
  {
    "objectID": "different-page/county-migration-flows.html#population-migration-flows-for-kansas-counties",
    "href": "different-page/county-migration-flows.html#population-migration-flows-for-kansas-counties",
    "title": "County Migration Flows",
    "section": "Population Migration Flows for Kansas Counties",
    "text": "Population Migration Flows for Kansas Counties\n\n\n\n\n                                                \nFigure 2: Population Migration Flows for Kansas Counties"
  },
  {
    "objectID": "different-page/healthy-wealthy-wise.html",
    "href": "different-page/healthy-wealthy-wise.html",
    "title": "Healthy, Wealthy, & Wise",
    "section": "",
    "text": "The Healthy, Wealthy, and Wise indices combine multiple indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Tables Figure 1, Figure 2, and Figure 3 contain the indicators for the respective index.\nThe individual indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\nprint(\"\\n\")\n\n\n\n\n\n\\[\\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100,\\]\n\nprint(\"\\n\")\n\n\n\n\n\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\). The final index value results from taking the geometric mean of the respective indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean.\n\n\n\n\n\n\n\n\n\n\n                                                \nFigure 1: Healthy Indicators\n\n\n\n\n\n\n\n                                                \nFigure 2: Wealthy Indicators\n\n\n\n\n\n\n\n\n\n\n\n                                                \nFigure 3: Wise Indicators"
  },
  {
    "objectID": "different-page/healthy-wealthy-wise-index.html",
    "href": "different-page/healthy-wealthy-wise-index.html",
    "title": "Healthy, Wealthy, & Wise",
    "section": "",
    "text": "The Healthy, Wealthy, and Wise indices combine multiple indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Tables ?@tbl-healthy, ?@tbl-wealthy, and ?@tbl-wise contain the indicators for the respective index.\nThe individual indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\). The final index value results from taking the geometric mean of the respective indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport requests\nimport scipy.stats as ss\nimport matplotlib as mpl\nimport json\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom urllib.request import urlopen\nfrom IPython.display import Image\nfrom IPython.display import HTML\n\nvalues = [\n    [\n        '% Fair or Poor Health',\n        'Average Number of Physically Unhealthy Days',\n        'Average Number of Mentally Unhealthy Days',\n        '% Low Birthweight',\n        '% Adults Reporting Currently Smoking',\n        '% Adults with Obesity',\n        '% Physically Inactive',\n        '% Excessive Drinking',\n        '% Uninsured'\n    ], #1st col\n    [\n        'Percentage of adults that report fair or poor health',\n        'Average number of reported physically unhealthy days per month',\n        'Average number of reported mentally unhealthy days per month',\n        'Percentage of births with low birthweight (&lt;2500g)',\n        'Percentage of adults that reported currently smoking',\n        'Percentage of adults that report BMI &gt;= 30',\n        'Percentage of adults that report no leisure-time physical activity',\n        'Percentage of adults that report excessive drinking',\n        'Percentage of people under age 65 without insurance'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\n\n\nCode\nvalues = [\n    [\n        'Income Ratio', \n        '% Children in Poverty', \n        'Unemployment Rate'\n    ], #1st col\n    [\n        'Ratio of household income at the 80th percentile to income at the 20th percentile',\n        'Percentage of children (under age 18) living in poverty',\n        'Percentage of population ages 16+ who are unemployed'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\n\n\nCode\nvalues = [\n    [\n        '% Completed High School', \n        '% Some College', \n        'Social Association Rate'\n    ], #1st col\n    [\n        'Percentage of adults age 25 and over with a high school diploma or equivalent',\n        'Percentage of adults age 25-44 with some post-secondary education',\n        'Social associations per 10,000 population'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)"
  },
  {
    "objectID": "different-page/healthy-wealthy-wise-index.html#methodology",
    "href": "different-page/healthy-wealthy-wise-index.html#methodology",
    "title": "Healthy, Wealthy, & Wise",
    "section": "",
    "text": "The Healthy, Wealthy, and Wise indices combine multiple indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Tables ?@tbl-healthy, ?@tbl-wealthy, and ?@tbl-wise contain the indicators for the respective index.\nThe individual indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\). The final index value results from taking the geometric mean of the respective indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport requests\nimport scipy.stats as ss\nimport matplotlib as mpl\nimport json\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom urllib.request import urlopen\nfrom IPython.display import Image\nfrom IPython.display import HTML\n\nvalues = [\n    [\n        '% Fair or Poor Health',\n        'Average Number of Physically Unhealthy Days',\n        'Average Number of Mentally Unhealthy Days',\n        '% Low Birthweight',\n        '% Adults Reporting Currently Smoking',\n        '% Adults with Obesity',\n        '% Physically Inactive',\n        '% Excessive Drinking',\n        '% Uninsured'\n    ], #1st col\n    [\n        'Percentage of adults that report fair or poor health',\n        'Average number of reported physically unhealthy days per month',\n        'Average number of reported mentally unhealthy days per month',\n        'Percentage of births with low birthweight (&lt;2500g)',\n        'Percentage of adults that reported currently smoking',\n        'Percentage of adults that report BMI &gt;= 30',\n        'Percentage of adults that report no leisure-time physical activity',\n        'Percentage of adults that report excessive drinking',\n        'Percentage of people under age 65 without insurance'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\n\n\nCode\nvalues = [\n    [\n        'Income Ratio', \n        '% Children in Poverty', \n        'Unemployment Rate'\n    ], #1st col\n    [\n        'Ratio of household income at the 80th percentile to income at the 20th percentile',\n        'Percentage of children (under age 18) living in poverty',\n        'Percentage of population ages 16+ who are unemployed'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\n\n\nCode\nvalues = [\n    [\n        '% Completed High School', \n        '% Some College', \n        'Social Association Rate'\n    ], #1st col\n    [\n        'Percentage of adults age 25 and over with a high school diploma or equivalent',\n        'Percentage of adults age 25-44 with some post-secondary education',\n        'Social associations per 10,000 population'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)"
  },
  {
    "objectID": "different-page/healthy-wealthy-wise-index.html#results",
    "href": "different-page/healthy-wealthy-wise-index.html#results",
    "title": "Healthy, Wealthy, & Wise",
    "section": "## Results",
    "text": "## Results\n\n\nCode\ntoken = 'pk.eyJ1Ijoid3N1cHBtYyIsImEiOiJjbDA2dWNiZmEyYjRqM2lsc2hrZ2g5Z3ZrIn0.Qcm0AOjbrEP6NPJ6u-14EA'\n\nwith urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:\n    counties = json.load(response)  \n\ndf = pd.read_csv('healthy-wealthy-wise-data.csv', dtype={'fips':'str'})\ndf = df.sort_values(by=['healthy_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(22,74,88,0.25)'), (1.0, 'rgba(22,74,88,0.25)')),\n    ((0.0, 'rgba(22,74,88,0.5)'), (1.0, 'rgba(22,74,88,0.5)')),\n    ((0.0, 'rgba(22,74,88,0.75)'), (1.0, 'rgba(22,74,88,0.75)')),\n    ((0.0, 'rgba(22,74,88,1.0)'), (1.0, 'rgba(22,74,88,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['healthy_quartile'].unique()):\n    dfp = df[df['healthy_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['healthy_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 1: Healthy Index\n\n\n\n\n\nCode\ndf = df.sort_values(by=['wealthy_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(231,38,40,0.25)'), (1.0, 'rgba(231,38,40,0.25)')),\n    ((0.0, 'rgba(231,38,40,0.5)'), (1.0, 'rgba(231,38,40,0.5)')),\n    ((0.0, 'rgba(231,38,40,0.75)'), (1.0, 'rgba(231,38,40,0.75)')),\n    ((0.0, 'rgba(231,38,40,1.0)'), (1.0, 'rgba(231,38,40,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['wealthy_quartile'].unique()):\n    dfp = df[df['wealthy_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['wealthy_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 2: Wealthy Index\n\n\n\n\n\nCode\ndf = df.sort_values(by=['wise_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(255,193,0,0.25)'), (1.0, 'rgba(255,193,0,0.25)')),\n    ((0.0, 'rgba(255,193,0,0.5)'), (1.0, 'rgba(255,193,0,0.5)')),\n    ((0.0, 'rgba(255,193,0,0.75)'), (1.0, 'rgba(255,193,0,0.75)')),\n    ((0.0, 'rgba(255,193,0,1.0)'), (1.0, 'rgba(255,193,0,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['wise_quartile'].unique()):\n    dfp = df[df['wise_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['wise_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 3: Wise Index"
  },
  {
    "objectID": "different-page/healthy-wealthy-wise.html#methodology",
    "href": "different-page/healthy-wealthy-wise.html#methodology",
    "title": "Healthy, Wealthy, & Wise",
    "section": "Methodology",
    "text": "Methodology\nThe Healthy, Wealthy, and Wise indices combine multiple indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Tables Figure 1, Figure 2, and Figure 3 contain the indicators for the respective index.\nThe individual indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\n\n\n\n\n\n\\[\\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100,\\]\n\n\n\n\n\n\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\). The final index value results from taking the geometric mean of the respective indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean.\n\n\n\n\n\n\n\n\n\n\n                                                \nFigure 1: Healthy Indicators\n\n\n\n\n\n\n\n                                                \nFigure 2: Wealthy Indicators\n\n\n\n\n\n\n\n\n\n\n\n                                                \nFigure 3: Wise Indicators"
  },
  {
    "objectID": "different-page/healthy-wealthy-wise.html#results",
    "href": "different-page/healthy-wealthy-wise.html#results",
    "title": "Healthy, Wealthy, & Wise",
    "section": "Results",
    "text": "Results\n**Note:** The borders of the counties in the South Kansas Coaltion are highlighted in the maps below.\n\n\n\n\n                                                \nFigure 4: Healthy Index\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                \nFigure 5: Wealthy Index\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                \nFigure 6: Wise Index"
  },
  {
    "objectID": "different-page/healthy-wealthy-wise.html#section",
    "href": "different-page/healthy-wealthy-wise.html#section",
    "title": "Healthy, Wealthy, & Wise",
    "section": "",
    "text": "Methodology\nThe Healthy, Wealthy, and Wise indices combine multiple indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Tables @tbl-healthy, @tbl-wealthy, and @tbl-wise contain the indicators for the respective index.\nThe individual indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\\[\\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100,\\] where \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\). The final index value results from taking the geometric mean of the respective indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean."
  },
  {
    "objectID": "different-page/healthy-wealthy-wise.html#sec-methodology",
    "href": "different-page/healthy-wealthy-wise.html#sec-methodology",
    "title": "Healthy, Wealthy, & Wise",
    "section": "",
    "text": "The Healthy, Wealthy, and Wise indices combine multiple indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Tables @tbl-healthy, @tbl-wealthy, and @tbl-wise contain the indicators for the respective index.\nThe individual indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\n\n\n\n\n\n\\[\\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100,\\]\n\n\n\n\n\n\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\). The final index value results from taking the geometric mean of the respective indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean."
  },
  {
    "objectID": "different-page/economic-distress-index.html#results",
    "href": "different-page/economic-distress-index.html#results",
    "title": "Economic Distress Index",
    "section": "Results",
    "text": "Results\n**Note:** The borders of the counties in the South Kansas Coaltion are highlighted in the map below.\n\n\n\n\n                                                \nFigure 2: Economic Distress Index for Kansas Counties\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                \nFigure 3: Distress Indicators and Quartiles by County(1st Quartile = Least Distressed, 4th Quartile = Most Distressed)"
  },
  {
    "objectID": "different-page/economic-distress-index.html#methodology",
    "href": "different-page/economic-distress-index.html#methodology",
    "title": "Economic Distress Index",
    "section": "Methodology",
    "text": "Methodology\nThe index combines seven indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Figure 1 contains the seven indicators along with their descriptions and sources.\n\n\n\n\n                                                \nFigure 1: Economic Distress Indicators and Descriptions\n\n\n\n\n\n\n\n\n\nThese seven indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\n\n\n\n\n\n\\[\\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\n\n\n\n\n\n\nwhere 𝑋𝑖𝑗 is the value of indicator 𝑖 for county 𝑗.\nIn most cases, higher values represent greater distress; however, for the median income ratio, change in employment, and change in establishments, lower values indicate greater distress. Therefore, normalization requires a slightly different formula:\n\n\n\n\n\n\n\\[\\text{Index Indicator}_{ij} = \\frac{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-X_{ij}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100. \\]\n\n\n\n\n\n\nThe final index value results from taking the geometric mean of the seven indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean."
  },
  {
    "objectID": "different-page/lightcast-reports.html",
    "href": "different-page/lightcast-reports.html",
    "title": "Economic Overview",
    "section": "",
    "text": "As of 2022 the region’s population increased by 1.4% since 2017, growing by 41,868. Population is expected to increase by 2.2% between 2022 and 2027, adding 64,441.\nFrom 2017 to 2022, jobs increased by 1.0% in Kansas from 1,576,387 to 1,592,469. This change fell short of the national growth rate of 3.4% by 2.4%. As the number of jobs increased, the labor force participation rate decreased from 66.7% to 66.7% between 2017 and 2022.\nConcerning educational attainment, 21.8% of Kansas residents possess a Bachelor’s Degree (1.0% above the national average), and 9.0% hold an Associate’s Degree (0.2% above the national average).\nThe top three industries in 2022 are Education and Hospitals (Local Government), Restaurants and Other Eating Places, and Local Government, Excluding Education and Hospitals."
  },
  {
    "objectID": "different-page/lightcast-reports.html#key-insights-state-of-kansas",
    "href": "different-page/lightcast-reports.html#key-insights-state-of-kansas",
    "title": "Economic Overview",
    "section": "Key Insights: State of Kansas",
    "text": "Key Insights: State of Kansas\n\nAs of 2022 the region’s population increased by 1.4% since 2017, growing by 41,868. Population is expected to increase by 2.2% between 2022 and 2027, adding 64,441.\nFrom 2017 to 2022, jobs increased by 1.0% in Kansas from 1,576,387 to 1,592,469. This change fell short of the national growth rate of 3.4% by 2.4%. As the number of jobs increased, the labor force participation rate decreased from 66.7% to 66.7% between 2017 and 2022.\nConcerning educational attainment, 21.8% of Kansas residents possess a Bachelor’s Degree (1.0% above the national average), and 9.0% hold an Associate’s Degree (0.2% above the national average).\nThe top three industries in 2022 are Education and Hospitals (Local Government), Restaurants and Other Eating Places, and Local Government, Excluding Education and Hospitals."
  },
  {
    "objectID": "different-page/lightcast-reports.html#key-insights-wichita-metropolitan-statistical-area",
    "href": "different-page/lightcast-reports.html#key-insights-wichita-metropolitan-statistical-area",
    "title": "Economic Overview",
    "section": "Key Insights: Wichita Metropolitan Statistical Area",
    "text": "Key Insights: Wichita Metropolitan Statistical Area\n\nAs of 2022 the region’s population increased by 2.3% since 2017, growing by 14,576. Population is expected to increase by 2.7% between 2022 and 2027, adding 17,672.\nFrom 2017 to 2022, jobs increased by 1.1% in Wichita, KS from 330,934 to 334,583. This change fell short of the national growth rate of 3.4% by 2.3%. As the number of jobs increased, the labor force participation rate increased from 63.5% to 63.7% between 2017 and 2022.\nConcerning educational attainment, 20.1% of Wichita, KS residents possess a Bachelor’s Degree (0.7% below the national average), and 9.0% hold an Associate’s Degree (0.1% above the national average).\nThe top three industries in 2022 are Aerospace Product and Parts Manufacturing, Restaurants and Other Eating Places, and Education and Hospitals (Local Government)."
  },
  {
    "objectID": "different-page/lightcast-reports.html#key-insights-south-kansas-coalition",
    "href": "different-page/lightcast-reports.html#key-insights-south-kansas-coalition",
    "title": "Economic Overview",
    "section": "Key Insights: South Kansas Coalition",
    "text": "Key Insights: South Kansas Coalition\n\nAs of 2022 the region’s population increased by 1.3% since 2017, growing by 13,577. Population is expected to increase by 2.2% between 2022 and 2027, adding 23,277.\nFrom 2017 to 2022, jobs increased by 0.4% in South Kansas Coalition from 507,986 to 510,046. This change fell short of the national growth rate of 3.4% by 3.0%. As the number of jobs increased, the labor force participation rate increased from 63.6% to 63.7% between 2017 and 2022.\nConcerning educational attainment, 18.5% of the selected regions’ residents possess a Bachelor’s Degree (2.3% below the national average), and 9.6% hold an Associate’s Degree (0.7% above the national average).\nThe top three industries in 2022 are Education and Hospitals (Local Government), Restaurants and Other Eating Places, and Aerospace Product and Parts Manufacturing."
  },
  {
    "objectID": "different-page/lightcast-reports.html#full-reports",
    "href": "different-page/lightcast-reports.html#full-reports",
    "title": "Economic Overview",
    "section": "Full Reports",
    "text": "Full Reports\n\nState of Kansas\nWichita Metropolitan Statistical Area\nSouth Kansas Coalition"
  },
  {
    "objectID": "different-page/lightcast-reports.html#source",
    "href": "different-page/lightcast-reports.html#source",
    "title": "Economic Overview",
    "section": "Source",
    "text": "Source\nThe reports were generated using Lightcast™ Developer (2023.2). The key insights above were pulled directly from these reports."
  },
  {
    "objectID": "different-page/economic-distress-index.html#key-insights",
    "href": "different-page/economic-distress-index.html#key-insights",
    "title": "Economic Distress Index",
    "section": "Key Insights",
    "text": "Key Insights\n\nEleven of the 27 counties in the South Kansas Region fall within the fourth quartile (i.e., most distressed) of the index for all Kansas counties.\nOnly five of the 27 counties in the South Kansas Region fall within the first quartile (i.e., least distressed) of the index for all Kansas counties.\nChautauqua County is the most distressed county in Kansas (and the South Kansas Region).\nMiami County is the least distressed county in the South Kansas Region."
  },
  {
    "objectID": "different-page/healthy-wealthy-wise.html#key-insights",
    "href": "different-page/healthy-wealthy-wise.html#key-insights",
    "title": "Healthy, Wealthy, & Wise",
    "section": "Key Insights",
    "text": "Key Insights\n\nSouth Kansas Coalition counties constitute 11 of the 26 counties in the 4th quartile of the Healthy Index.\nSixteen South Kansas Coalition counties fall within the 4th quartile of the Wealthy Index.\nThe 4th quartile of the Wise Index contains 8 South Kansas Coaltion counties."
  },
  {
    "objectID": "different-page/2023-05-16-economic-distress-index.html",
    "href": "different-page/2023-05-16-economic-distress-index.html",
    "title": "Economic Distress Index",
    "section": "",
    "text": "Eleven of the 27 counties in the South Kansas Region fall within the fourth quartile (i.e., most distressed) of the index for all Kansas counties.\nOnly five of the 27 counties in the South Kansas Region fall within the first quartile (i.e., least distressed) of the index for all Kansas counties.\nChautauqua County is the most distressed county in Kansas (and the South Kansas Region).\nMiami County is the least distressed county in the South Kansas Region."
  },
  {
    "objectID": "different-page/2023-05-16-economic-distress-index.html#key-insights",
    "href": "different-page/2023-05-16-economic-distress-index.html#key-insights",
    "title": "Economic Distress Index",
    "section": "",
    "text": "Eleven of the 27 counties in the South Kansas Region fall within the fourth quartile (i.e., most distressed) of the index for all Kansas counties.\nOnly five of the 27 counties in the South Kansas Region fall within the first quartile (i.e., least distressed) of the index for all Kansas counties.\nChautauqua County is the most distressed county in Kansas (and the South Kansas Region).\nMiami County is the least distressed county in the South Kansas Region."
  },
  {
    "objectID": "different-page/2023-05-16-economic-distress-index.html#methodology",
    "href": "different-page/2023-05-16-economic-distress-index.html#methodology",
    "title": "Economic Distress Index",
    "section": "## Methodology",
    "text": "## Methodology\nThe index combines seven indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Table ?@tbl-indicators contains the seven indicators along with their descriptions and sources.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport requests\nimport scipy.stats as ss\nimport matplotlib as mpl\nimport json\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom urllib.request import urlopen\nfrom IPython.display import Image\nfrom IPython.display import HTML\n\nvalues = [\n    [\n        'No High School Diploma', \n        'Housing Vacancy Rate', \n        'Unemployment Rate', \n        'Poverty Rate', \n        'Median Income Ratio', \n        'Change in Employment', \n        'Change in Establishments'\n    ], #1st col\n    [\n        'Percentage of the population 25 years of age and older &lt;b&gt;without a high school diploma or equivalent&lt;/b&gt;',\n        'Percentage of habitable housing that is &lt;b&gt;unoccupied&lt;/b&gt; (excludes properties that are for seasonal, recreational, or occasional use)',\n        'The number of &lt;b&gt;unemployed people&lt;/b&gt; as a fraction of the labor force',\n        'Percentage of the population living &lt;b&gt;under the poverty line&lt;/b&gt;',\n        'Median household income &lt;b&gt;as a percentage&lt;/b&gt; of the state’s median household income',\n        'Percentage change in the &lt;b&gt;number of jobs&lt;/b&gt;',\n        'Percentage change in the number of &lt;b&gt;business establishments&lt;/b&gt;'\n    ],\n    [\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'ACS (2016-2020)',\n        'CBP (2019, 2020)',\n        'CBP (2019, 2020)'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2,3],\n  columnwidth = [25,60,20],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;'],\n        ['&lt;b&gt;Source&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(22,74,88)', 'rgb(231,38,40)', 'rgb(255,193,0)'],\n    align=['center','center','center'],\n    font=dict(color='white', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white', 'white']),\n    align=['left', 'left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\nThese seven indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\).\nIn most cases, higher values represent greater distress; however, for the median income ratio, change in employment, and change in establishments, lower values indicate greater distress. Therefore, normalization requires a slightly different formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-X_{ij}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100.\\]\nThe final index value results from taking the geometric mean of the seven indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean."
  },
  {
    "objectID": "different-page/2023-05-16-economic-distress-index.html#results",
    "href": "different-page/2023-05-16-economic-distress-index.html#results",
    "title": "Economic Distress Index",
    "section": "Results",
    "text": "Results\n\nNote: The borders of the counties in the South Kansas Coaltion are highlighted in the map below.\n\n\nCode\nskc = pd.DataFrame(\n    ['20001', '20003', '20011',\n     '20015', '20019', '20021',\n     '20031', '20035', '20037',\n     '20049', '20059', '20073',\n     '20077', '20079', '20095',\n     '20099', '20107', '20113',\n     '20115', '20121', '20125',\n     '20133', '20155', '20173',\n     '20191', '20205', '20207'], \n    columns=['fips']\n)\n\ntoken = 'pk.eyJ1Ijoid3N1cHBtYyIsImEiOiJjbDA2dWNiZmEyYjRqM2lsc2hrZ2g5Z3ZrIn0.Qcm0AOjbrEP6NPJ6u-14EA'\n\nwith urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:\n    counties = json.load(response)  \n\ndf = pd.read_csv('2020-distress-index-data.csv', dtype={'fips':'str'})\ndf = df.sort_values(by=['index_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(231,38,40,0.25)'), (1.0, 'rgba(231,38,40,0.25)')),\n    ((0.0, 'rgba(231,38,40,0.5)'), (1.0, 'rgba(231,38,40,0.5)')),\n    ((0.0, 'rgba(231,38,40,0.75)'), (1.0, 'rgba(231,38,40,0.75)')),\n    ((0.0, 'rgba(231,38,40,1.0)'), (1.0, 'rgba(231,38,40,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['index_quartile'].unique()):\n    dfp = df[df['index_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['index_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nchoropleth = go.Choroplethmapbox(\n        geojson=counties,\n        locations=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        z=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        zmin=0, zmax=0,\n        colorscale = [[0,'rgba(0, 0, 0, 0)'],[1,'rgba(0, 0, 0, 0)']],\n        marker_line_color='rgb(131,201,217)',\n        marker_line_width=2,\n        showscale = False,\n        text='County:  ' + df[df.fips.isin(skc['fips'].tolist())]['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + df[df.fips.isin(skc['fips'].tolist())]['index_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.add_trace(choropleth)       \n    \nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 1: Economic Distress Index for Kansas Counties\n\n\n\n\n\nCode\ndf = df.sort_values(by=['county'])\n\nnames = [\n    '&lt;b&gt;County&lt;/b&gt;', '&lt;b&gt;No HS Diploma&lt;/b&gt;', '&lt;b&gt;Unemp Rate&lt;/b&gt;', \n    '&lt;b&gt;Poverty Rate&lt;/b&gt;', '&lt;b&gt;Median Income&lt;/b&gt;', '&lt;b&gt;Estab Change&lt;/b&gt;', \n    '&lt;b&gt;Emp Change&lt;/b&gt;', '&lt;b&gt;Vacancy Rate&lt;/b&gt;', '&lt;b&gt;Distress Index&lt;/b&gt;', '&lt;b&gt;Index Quartile&lt;/b&gt;'\n]\n\nfig = go.Figure(data=[go.Table(\n    columnwidth = [15]+[10]*9,\n    header=dict(values=names,\n                line_color='darkslategray',\n                fill_color='rgb(131,201,217)',\n                font=dict(color='white', size=12),\n                align='center'),\n    cells=dict(values=[df.county, df.hs_lower.apply('{0:.2f}'.format), df.unemployment_rate.apply('{0:.2f}'.format), \n                       df.poverty_rate.apply('{0:.2f}'.format), df.med_inc_rate.apply('{0:.2f}'.format), \n                       df.est_chg.apply('{0:.2f}'.format), df.emp_chg.apply('{0:.2f}'.format), \n                       df.vacancy_rate.apply('{0:.2f}'.format), df.distress_index.apply('{0:.2f}'.format), \n                       df.index_quartile.str.split(' ').str[0]],\n               line_color='darkslategray',\n               fill_color=['rgba(131,201,217,0.2)','white'],\n               font=dict(color='black', size=12),\n               align=['left', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'center']))\n])\n\nfig.show()\n\n\n\n?(caption)"
  },
  {
    "objectID": "different-page/2023-05-16-healthy-wealthy-wise-index.html",
    "href": "different-page/2023-05-16-healthy-wealthy-wise-index.html",
    "title": "Healthy, Wealthy, & Wise",
    "section": "",
    "text": "South Kansas Coalition counties constitute 11 of the 26 counties in the 4th quartile of the Healthy Index.\nSixteen South Kansas Coalition counties fall within the 4th quartile of the Wealthy Index.\nThe 4th quartile of the Wise Index contains 8 South Kansas Coaltion counties."
  },
  {
    "objectID": "different-page/2023-05-16-healthy-wealthy-wise-index.html#key-insights",
    "href": "different-page/2023-05-16-healthy-wealthy-wise-index.html#key-insights",
    "title": "Healthy, Wealthy, & Wise",
    "section": "",
    "text": "South Kansas Coalition counties constitute 11 of the 26 counties in the 4th quartile of the Healthy Index.\nSixteen South Kansas Coalition counties fall within the 4th quartile of the Wealthy Index.\nThe 4th quartile of the Wise Index contains 8 South Kansas Coaltion counties."
  },
  {
    "objectID": "different-page/2023-05-16-healthy-wealthy-wise-index.html#methodology",
    "href": "different-page/2023-05-16-healthy-wealthy-wise-index.html#methodology",
    "title": "Healthy, Wealthy, & Wise",
    "section": "## Methodology",
    "text": "## Methodology\nThe Healthy, Wealthy, and Wise indices combine multiple indicators into a single, comparative measure of economic well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey (ACS) 5-Year Estimates and County Business Patterns (CBP) datasets. Tables ?@tbl-healthy, ?@tbl-wealthy, and ?@tbl-wise contain the indicators for the respective index.\nThe individual indicators are individually normalized across 105 counties on a scale of 0 to 100, where 100 represents the most distressed county and 0 represents the least distressed county. The individual indicators are normalized using the following formula:\n\\[ \\text{Index Indicator}_{ij} = \\frac{X_{ij}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}}{\\text{max}_{(\\text{of } 105)}\\{X_i\\}-\\text{min}_{(\\text{of } 105)}\\{X_i\\}} \\times 100, \\]\nwhere \\(X_{ij}\\) is the value of indicator \\(i\\) for county \\(j\\). The final index value results from taking the geometric mean of the respective indicators. To handle the zeros, one is added to each normalized indicator; therefore, one is then subtracted from the calculated mean.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport requests\nimport scipy.stats as ss\nimport matplotlib as mpl\nimport json\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nfrom urllib.request import urlopen\nfrom IPython.display import Image\nfrom IPython.display import HTML\n\nvalues = [\n    [\n        '% Fair or Poor Health',\n        'Average Number of Physically Unhealthy Days',\n        'Average Number of Mentally Unhealthy Days',\n        '% Low Birthweight',\n        '% Adults Reporting Currently Smoking',\n        '% Adults with Obesity',\n        '% Physically Inactive',\n        '% Excessive Drinking',\n        '% Uninsured'\n    ], #1st col\n    [\n        'Percentage of adults that report fair or poor health',\n        'Average number of reported physically unhealthy days per month',\n        'Average number of reported mentally unhealthy days per month',\n        'Percentage of births with low birthweight (&lt;2500g)',\n        'Percentage of adults that reported currently smoking',\n        'Percentage of adults that report BMI &gt;= 30',\n        'Percentage of adults that report no leisure-time physical activity',\n        'Percentage of adults that report excessive drinking',\n        'Percentage of people under age 65 without insurance'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\n\n\nCode\nvalues = [\n    [\n        'Income Ratio', \n        '% Children in Poverty', \n        'Unemployment Rate'\n    ], #1st col\n    [\n        'Ratio of household income at the 80th percentile to income at the 20th percentile',\n        'Percentage of children (under age 18) living in poverty',\n        'Percentage of population ages 16+ who are unemployed'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)\n\n\n\n\n                                                \n\n\n\n\n\n\nCode\nvalues = [\n    [\n        '% Completed High School', \n        '% Some College', \n        'Social Association Rate'\n    ], #1st col\n    [\n        'Percentage of adults age 25 and over with a high school diploma or equivalent',\n        'Percentage of adults age 25-44 with some post-secondary education',\n        'Social associations per 10,000 population'\n    ]\n]\n\n\nfig = go.Figure(data=[go.Table(\n  columnorder = [1,2],\n  columnwidth = [25,60],\n  header = dict(\n    values = [\n        ['&lt;b&gt;Indicator&lt;/b&gt;'],\n        ['&lt;b&gt;Description&lt;/b&gt;']\n    ],\n    line_color='darkslategray',\n    fill_color=['rgb(241, 241, 241)', 'rgb(241, 241, 241)'],\n    align=['center','center'],\n    font=dict(color='rgb(22,74,88)', size=12),\n    height=20\n  ),\n  cells=dict(\n    values=values,\n    line_color='darkslategray',\n    fill=dict(color=['white', 'white']),\n    align=['left', 'left'],\n    font=dict(color='black', size=12),\n    height=30)\n    )\n])\nfig.show()\n\n\n\n?(caption)"
  },
  {
    "objectID": "different-page/2023-05-16-healthy-wealthy-wise-index.html#results",
    "href": "different-page/2023-05-16-healthy-wealthy-wise-index.html#results",
    "title": "Healthy, Wealthy, & Wise",
    "section": "Results",
    "text": "Results\n\nNote: The borders of the counties in the South Kansas Coaltion are highlighted in the maps below.\n\n\nCode\nskc = pd.DataFrame(\n    ['20001', '20003', '20011',\n     '20015', '20019', '20021',\n     '20031', '20035', '20037',\n     '20049', '20059', '20073',\n     '20077', '20079', '20095',\n     '20099', '20107', '20113',\n     '20115', '20121', '20125',\n     '20133', '20155', '20173',\n     '20191', '20205', '20207'], \n    columns=['fips']\n)\n\ntoken = 'pk.eyJ1Ijoid3N1cHBtYyIsImEiOiJjbDA2dWNiZmEyYjRqM2lsc2hrZ2g5Z3ZrIn0.Qcm0AOjbrEP6NPJ6u-14EA'\n\nwith urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:\n    counties = json.load(response)  \n\ndf = pd.read_csv('healthy-wealthy-wise-data.csv', dtype={'fips':'str'})\ndf = df.sort_values(by=['healthy_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(22,74,88,0.25)'), (1.0, 'rgba(22,74,88,0.25)')),\n    ((0.0, 'rgba(22,74,88,0.5)'), (1.0, 'rgba(22,74,88,0.5)')),\n    ((0.0, 'rgba(22,74,88,0.75)'), (1.0, 'rgba(22,74,88,0.75)')),\n    ((0.0, 'rgba(22,74,88,1.0)'), (1.0, 'rgba(22,74,88,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['healthy_quartile'].unique()):\n    dfp = df[df['healthy_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['healthy_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n    \nchoropleth = go.Choroplethmapbox(\n        geojson=counties,\n        locations=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        z=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        zmin=0, zmax=0,\n        colorscale = [[0,'rgba(0, 0, 0, 0)'],[1,'rgba(0, 0, 0, 0)']],\n        marker_line_color='rgb(255,193,0)',\n        marker_line_width=2,\n        showscale = False,\n        text='County:  ' + df[df.fips.isin(skc['fips'].tolist())]['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + df[df.fips.isin(skc['fips'].tolist())]['healthy_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.add_trace(choropleth)    \n\nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 1: Healthy Index\n\n\n\n\n\nCode\ndf = df.sort_values(by=['wealthy_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(231,38,40,0.25)'), (1.0, 'rgba(231,38,40,0.25)')),\n    ((0.0, 'rgba(231,38,40,0.5)'), (1.0, 'rgba(231,38,40,0.5)')),\n    ((0.0, 'rgba(231,38,40,0.75)'), (1.0, 'rgba(231,38,40,0.75)')),\n    ((0.0, 'rgba(231,38,40,1.0)'), (1.0, 'rgba(231,38,40,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['wealthy_quartile'].unique()):\n    dfp = df[df['wealthy_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['wealthy_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nchoropleth = go.Choroplethmapbox(\n        geojson=counties,\n        locations=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        z=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        zmin=0, zmax=0,\n        colorscale = [[0,'rgba(0, 0, 0, 0)'],[1,'rgba(0, 0, 0, 0)']],\n        marker_line_color='rgb(131,201,217)',\n        marker_line_width=2,\n        showscale = False,\n        text='County:  ' + df[df.fips.isin(skc['fips'].tolist())]['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + df[df.fips.isin(skc['fips'].tolist())]['wealthy_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.add_trace(choropleth)     \n    \nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 2: Wealthy Index\n\n\n\n\n\nCode\ndf = df.sort_values(by=['wise_quartile'])\n\ncolorscales = [\n    ((0.0, 'rgba(255,193,0,0.25)'), (1.0, 'rgba(255,193,0,0.25)')),\n    ((0.0, 'rgba(255,193,0,0.5)'), (1.0, 'rgba(255,193,0,0.5)')),\n    ((0.0, 'rgba(255,193,0,0.75)'), (1.0, 'rgba(255,193,0,0.75)')),\n    ((0.0, 'rgba(255,193,0,1.0)'), (1.0, 'rgba(255,193,0,1.0)'))\n]\n\nfig = go.Figure()\nfor i, quartile in enumerate(df['wise_quartile'].unique()):\n    dfp = df[df['wise_quartile'] == quartile]\n    fig.add_choroplethmapbox(\n        geojson=counties, locations=dfp['fips'],\n        z=[i,] * len(dfp), featureidkey='id',\n        showlegend=True, name=quartile,\n        colorscale=colorscales[i], showscale=False,\n        text='County:  ' + dfp['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + dfp['wise_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nchoropleth = go.Choroplethmapbox(\n        geojson=counties,\n        locations=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        z=df[df.fips.isin(skc['fips'].tolist())]['fips'],\n        zmin=0, zmax=0,\n        colorscale = [[0,'rgba(0, 0, 0, 0)'],[1,'rgba(0, 0, 0, 0)']],\n        marker_line_color='rgb(22,74,88)',\n        marker_line_width=2,\n        showscale = False,\n        text='County:  ' + df[df.fips.isin(skc['fips'].tolist())]['county'].str.title() +\n        '&lt;br&gt;Quartile:  ' + df[df.fips.isin(skc['fips'].tolist())]['wise_quartile'].str.split(' ').str[0],\n        hoverinfo='text'\n    )\n\nfig.add_trace(choropleth)     \n    \nfig.update_layout(legend_title='Index Performance', margin={'r':0,'t':0,'l':0,'b':0},\n                  mapbox_accesstoken=token,\n                  mapbox=dict(style='carto-positron', zoom=6, \n                              center={'lat': 38.4937, 'lon': -98.3804},))\n\nfig.show()\n\n\n\n\n                                                \nFigure 3: Wise Index"
  },
  {
    "objectID": "different-page/county-migration-flows.html#key-insights",
    "href": "different-page/county-migration-flows.html#key-insights",
    "title": "County Migration Flows",
    "section": "Key Insights",
    "text": "Key Insights\n\nApproximately half of all Kansas counties experienced a net outflow, while the other half experienced a net inflow.\nThirteen of the 27 counties in the South Kansas Region experience a net outflow.\nThe South Kansas Region as a whole experienced a net inflow, driven by large net inflows in Sedgwick County and Crawford County."
  },
  {
    "objectID": "different-page/2023-05-16-county-migration-flows.html",
    "href": "different-page/2023-05-16-county-migration-flows.html",
    "title": "County Population Migration Flows",
    "section": "",
    "text": "Approximately half of all Kansas counties experienced a net outflow, while the other half experienced a net inflow.\nThirteen of the 27 counties in the South Kansas Region experience a net outflow.\nThe South Kansas Region as a whole experienced a net inflow, driven by large net inflows in Sedgwick County and Crawford County."
  },
  {
    "objectID": "different-page/2023-05-16-county-migration-flows.html#key-insights",
    "href": "different-page/2023-05-16-county-migration-flows.html#key-insights",
    "title": "County Population Migration Flows",
    "section": "",
    "text": "Approximately half of all Kansas counties experienced a net outflow, while the other half experienced a net inflow.\nThirteen of the 27 counties in the South Kansas Region experience a net outflow.\nThe South Kansas Region as a whole experienced a net inflow, driven by large net inflows in Sedgwick County and Crawford County."
  },
  {
    "objectID": "different-page/2023-05-16-county-migration-flows.html#methodology",
    "href": "different-page/2023-05-16-county-migration-flows.html#methodology",
    "title": "County Population Migration Flows",
    "section": "## Methodology",
    "text": "## Methodology\nThe following data come from the U.S. Census Bureau’s County-to-County Migration Flows dataset. Figure Figure 1 shows net migration for Kansas counties. Table ?@tbl-results shows inflow, outflow, and net flow by county. Net flow (i.e., migration) is given by the following simple calculation:\n\\[\\text{Net Flow}_i = \\text{Inflow}_i - \\text{Outflow}_i,\\]\nwhere \\(\\text{Net Flow}_i &lt; 0\\) indicates the number of indiviuals leaving county \\(i\\) exceeded the number of individuals entering county \\(i\\) during the sampling period."
  },
  {
    "objectID": "different-page/2023-05-16-county-migration-flows.html#results",
    "href": "different-page/2023-05-16-county-migration-flows.html#results",
    "title": "County Population Migration Flows",
    "section": "Results",
    "text": "Results\n\nNote: The borders of the counties in the South Kansas Coaltion are highlighted in the map below.\n\n\nCode\nimport folium\nimport json\nimport numpy as np\nimport pandas as pd\nimport plotly\nimport chart_studio\nimport chart_studio.plotly as py\nimport plotly.graph_objects as go\nimport plotly.io as pio\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport chart_studio.tools as tls\nfrom urllib.request import urlopen\nimport urllib, json\nimport requests\nimport matplotlib as mpl\nfrom IPython.display import IFrame\n\nskc = pd.DataFrame(\n    ['20001', '20003', '20011',\n     '20015', '20019', '20021',\n     '20031', '20035', '20037',\n     '20049', '20059', '20073',\n     '20077', '20079', '20095',\n     '20099', '20107', '20113',\n     '20115', '20121', '20125',\n     '20133', '20155', '20173',\n     '20191', '20205', '20207'], \n    columns=['fips']\n)\n\ndf = pd.read_csv('county-migration-flow-data.csv')\n\ndef color_scale(c1, c2, n): #fade (linear interpolate) from color c1 (at mix=0) to c2 (mix=1)\n    colors = []\n    c1 = np.array(mpl.colors.to_rgb(c1))\n    c2 = np.array(mpl.colors.to_rgb(c2))\n\n    for x in range(n+1):\n        color = mpl.colors.to_hex((1-x/n)*c1 + x/n*c2)\n        colors.append(color)\n\n    return colors\n\nblue1 ='#83c9d9'\nblue2 ='#164a58'\nn=500\ncolors = color_scale(blue1, blue2, n)\n\nwith urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:\n    counties = json.load(response) \n    \ntoken = 'pk.eyJ1Ijoid3N1cHBtYyIsImEiOiJjbDA2dWNiZmEyYjRqM2lsc2hrZ2g5Z3ZrIn0.Qcm0AOjbrEP6NPJ6u-14EA'\n\nfig = go.Figure(go.Choroplethmapbox(geojson=counties, locations=df['fips1'], z=df['netflow'],\n#                                     locations=df[fmask]['area_fips'], z=df[fmask]['month3_emplvl'],\n                                    colorscale=colors, zmin=df['netflow'].min(), zmax=df['netflow'].max(),\n                                    marker_opacity=0.5, marker_line_width=1,\n                                    text='County:  ' + df['county1_name'].str.title() +\n                                    '&lt;br&gt;Inflow:   ' + df.inflow.apply('{0:,.0f}'.format) +\n                                    '&lt;br&gt;Outflow:  ' + df.outflow.apply('{0:,.0f}'.format) + \n                                    '&lt;br&gt;Net Flow:  ' + df.netflow.apply('{0:,.0f}'.format),\n                                    hoverinfo='text',\n#                                     showscale=False,\n                                    colorbar=dict(\n                                        title='Net Migration Flow',\n                                        titleside='top'\n                                    )\n                                   ))\n\nfig.update_layout(mapbox_style='carto-positron', mapbox_accesstoken=token,\n                  mapbox_zoom=6, mapbox_center = {'lat': 38.4937, 'lon': -98.3804})\nfig.update_layout(margin={'r':0,'t':0,'l':0,'b':0})\n\nchoropleth = go.Choroplethmapbox(\n        geojson=counties,\n        locations=df[df.fips1.isin(skc['fips'].astype(int).tolist())]['fips1'],\n        z=df[df.fips1.isin(skc['fips'].astype(int).tolist())]['fips1'],\n        zmin=0, zmax=0,\n        colorscale = [[0,'rgba(0, 0, 0, 0)'],[1,'rgba(0, 0, 0, 0)']],\n        marker_line_color='rgb(255,193,0)',\n        marker_line_width=2,\n        showscale = False,\n        text='County:  ' + df[df.fips1.isin(skc['fips'].astype(int).tolist())]['county1_name'].str.title() +\n        '&lt;br&gt;Inflow:   ' + df[df.fips1.isin(skc['fips'].astype(int).tolist())].inflow.apply('{0:,.0f}'.format) +\n        '&lt;br&gt;Outflow:  ' + df[df.fips1.isin(skc['fips'].astype(int).tolist())].outflow.apply('{0:,.0f}'.format) + \n        '&lt;br&gt;Net Flow:  ' + df[df.fips1.isin(skc['fips'].astype(int).tolist())].netflow.apply('{0:,.0f}'.format),\n        hoverinfo='text'\n    )\n\nfig.add_trace(choropleth)\n\nfig.show()\n\n\n\n\n                                                \nFigure 1: Net Migration Flows for Kansas Counties\n\n\n\n\n\nCode\ndf = df.sort_values(by=['netflow'], ascending=False)\n\nnames = [\n    '&lt;b&gt;County&lt;/b&gt;', '&lt;b&gt;Inflow&lt;/b&gt;', \n    '&lt;b&gt;Outflow&lt;/b&gt;', '&lt;b&gt;Net Flow&lt;/b&gt;'\n]\n\nfig = go.Figure(data=[go.Table(\n    columnwidth = [15]+[10]*9,\n    header=dict(values=names,\n                line_color='darkslategray',\n                fill_color='rgb(131,201,217)',\n                font=dict(color='white', size=12),\n                align='center'),\n    cells=dict(values=[df.county1_name, df.inflow.apply('{0:,.0f}'.format), df.outflow.apply('{0:,.0f}'.format), \n                       df.netflow.apply('{0:,.0f}'.format)],\n               line_color='darkslategray',\n               fill_color=['rgba(131,201,217,0.2)','white'],\n               font=dict(color='black', size=12),\n               align=['left', 'right', 'right', 'right']))\n])\n\nfig.show()\n\n\n\n?(caption)"
  }
]